@import url('https://fonts.googleapis.com/css2?family=Indie+Flower&display=swap');
$bookAngle: 60deg;
$speed: 2s;
$borderColor: #555;
$images: url('https://user-images.githubusercontent.com/80110392/215575531-cd6986e6-5a9d-4113-8e6a-e1a5f1bcea77.png'),
url('https://user-images.githubusercontent.com/80110392/215576885-fb1abe4d-81a0-4508-b722-debbbe4d6b77.png'),
// url('https://user-images.githubusercontent.com/80110392/215576907-66064344-d4a9-46e3-b5cf-1315cb687cfb.png'),
// url('https://user-images.githubusercontent.com/80110392/215576980-65314b89-fabe-49b0-8172-5c713d000938.png'),
// url('https://user-images.githubusercontent.com/80110392/215576926-52599a36-8d6d-4b70-baca-ea4f4404b521.png'),
url('https://user-images.githubusercontent.com/80110392/215577378-2fd16d08-d8a7-41a8-bc1c-c8381c83d745.png'),
// url('https://user-images.githubusercontent.com/80110392/215577395-93ec939c-1a3d-4b54-b9b8-9c39bd145758.png'),
// url('https://user-images.githubusercontent.com/80110392/215577627-bcf0c387-af5f-4b75-9456-623ecaba983c.png'),
// url('https://user-images.githubusercontent.com/80110392/215577752-df5479b5-abee-4d1e-a373-c2f5540eb312.png'),
// url('https://user-images.githubusercontent.com/80110392/215577765-fe811333-e711-4512-80d6-33ff378f529b.png'),
url('https://user-images.githubusercontent.com/80110392/215577776-53ad6e5a-cfb3-43ad-b7aa-46747650a487.png'),
// url('https://user-images.githubusercontent.com/80110392/215577789-9bb21567-8a57-456b-a2b2-e06488037cac.png'),
url('https://user-images.githubusercontent.com/80110392/215578040-f7d0c9b1-7710-487f-9ead-f868cecf9071.png'),
// url('https://user-images.githubusercontent.com/80110392/215578049-5bdeaae0-0b37-4645-a36a-417c8391d380.png'),
// url('https://user-images.githubusercontent.com/80110392/215578064-ca0db575-fa46-46d9-b5f4-f0946b5366a0.png'),
url('https://user-images.githubusercontent.com/80110392/215578072-6861ad2a-1d30-497f-a9a4-e9e543513528.png'),
// url('https://user-images.githubusercontent.com/80110392/215575366-b763b405-6d75-4492-9ccc-9ecc04c27275.png'),
// url('https://user-images.githubusercontent.com/80110392/215575768-6abef413-c49b-4bba-87c7-4331785f2175.png'),
// url('https://user-images.githubusercontent.com/80110392/215575904-11a6b261-92ef-47c9-bbee-f2620d77dc14.png'),
url('https://user-images.githubusercontent.com/80110392/215576099-b3a3dd0a-4b9c-4852-aa6a-9b1ae7f2e1b8.png'),
url('https://user-images.githubusercontent.com/80110392/215576305-6c2439e3-5b4b-4038-b46d-b1708fe42e54.png');
// Preload to images
.imgLoader {
    position: fixed;
    animation: preLoad 1s steps(1);
    width: 1px;
    height: 1px;
    @keyframes preLoad {
        @for $i from 0 through 4 {
            #{$i * 10}% {
                background-image: nth($images, ($i + 1));
            }
        }
        100% {
            display: none;
        }
    }
}

.book {
    position: relative;
    perspective: 630px;
    perspective-origin: center 50px;
    transform: scale(1.8);
    filter: drop-shadow(0px 10px 5px rgba(0, 0, 0, 0.25));
}

.page {
    width: 210px;
    height: 300px;
    background-color: #bbb;
    position: absolute;
    top: 0px;
    right: 50%;
    transform-origin: 100% 100%;
    border: solid $borderColor 2px;
    background-size: 420px 300px;
    background-position: center;
    transform-style: preserve-3d;
    &:nth-child(1) {
        transform: rotateX($bookAngle) rotateY(3deg);
    }
    &:nth-child(2) {
        transform: rotateX($bookAngle) rotateY(4.5deg);
    }
    &:nth-child(3) {
        transform: rotateX($bookAngle) rotateY(6deg);
        animation: nextPage $speed*5 infinite $speed*-4.8 steps(1);
        background-size: 420px 300px;
        background-position: -2px -2px;
    }
    &:nth-child(4) {
        transform: rotateX($bookAngle) rotateY(177deg);
    }
    &:nth-child(5) {
        transform: rotateX($bookAngle) rotateY(175.5deg);
    }
    &:nth-child(6) {
        transform: rotateX($bookAngle) rotateY(174deg);
        overflow: hidden;
        &::after {
            content: '';
            width: 210px;
            height: 300px;
            position: absolute;
            top: 0px;
            right: 0%;
            transform-origin: center;
            transform: rotateY(180deg);
            animation: nextPage $speed*5 $speed*-4 infinite steps(1);
            background-size: 420px 300px;
            background-position: 100% -2px;
        }
    }
    @keyframes nextPage {
        @for $i from 0 through 4 {
            #{$i * 20}% {
                background-image: nth($images, ($i + 1));
            }
        }
    }
}

.gap {
    width: 10px;
    height: 300px;
    background: none;
    transform: rotateX($bookAngle);
    transform-origin: bottom;
    position: absolute;
    top: 0px;
    left: calc(50% - 5px);
    &::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 50%;
        transform: translate(-50%, 50%);
        background-color: $borderColor;
        width: 10px;
        height: 5px;
        border-radius: 50%;
    }
}

.pages,
.flips {
    transform-style: preserve-3d;
}

.flip {
    width: 32px;
    height: 300px;
    position: absolute;
    top: 0px;
    transform-origin: 100% 100%;
    right: 100%;
    border: solid $borderColor;
    border-width: 2px 0px;
    perspective: 4200px;
    perspective-origin: center;
    transform-style: preserve-3d;
    background-size: 420px 300px;
    &::after {
        content: '';
        position: absolute;
        top: 0px;
        right: 0%;
        width: 100%;
        height: 100%;
        transform-origin: center;
        background-size: 420px 300px;
    }
    &.flip1 {
        right: 50%;
        animation: flip1 $speed infinite ease-in-out;
        border-width: 2px 2px 2px 0;
        &::after {
            animation: nextFlip1 $speed*5 $speed*-4 infinite steps(1);
        }
    }
    &:not(.flip1) {
        right: calc(100% - 2px);
        top: -2px;
        transform-origin: right;
        animation: flip2 $speed ease-in-out infinite;
    }
    @for $i from 2 through 7 {
        &.flip#{$i}::after {
            animation: nextFlip#{$i} $speed*5 $speed*-4 infinite steps(1);
        }
    }
    &.flip7 {
        width: 30px;
        border-width: 2px 0px 2px 2px;
        &::after {
            animation: nextFlip7 $speed*5 $speed*-4 infinite steps(1);
        }
    }
    @keyframes flip1 {
        0%,
        20% {
            transform: rotateX($bookAngle) rotateY(6deg);
        }
        80%,
        100% {
            transform: rotateX($bookAngle) rotateY(174deg);
        }
    }
    @keyframes flip2 {
        0%,
        20% {
            transform: rotateY(0deg) translateY(0px);
        }
        50% {
            transform: rotateY(-15deg) translateY(0px);
        }
    }
}

@keyframes nextFlip1 {
    @for $i from 0 through 4 {
        #{$i * 20}% {
            background-image: nth($images, ($i + 1));
            background-position: -178px -2px;
            transform: rotateY(0deg);
        }
        #{10 + ($i * 20)}% {
            background-image: nth($images, ($i + 2));
            background-position: -210px -2px;
            transform: rotateY(180deg);
        }
    }
}

@for $i from 2 through 6 {
    @keyframes nextFlip#{$i} {
        @for $j from 0 through 4 {
            #{$j * 20}% {
                background-image: nth($images, ($j + 1));
                background-position: #{-148 + (($i - 2) * 30)}px -2px;
                transform: rotateY(0deg);
            }
            #{((10 + ($j * 20)) + (($i - 1) * 0.5))}% {
                background-image: nth($images, ($j + 2));
                background-position: #{-238 - (($i - 2) * 30)}px -2px;
                transform: rotateY(180deg);
            }
        }
    }
}

@keyframes nextFlip7 {
    @for $i from 0 through 4 {
        #{$i * 20}% {
            background-image: nth($images, ($i + 1));
            background-position: -2px -2px;
            transform: rotateY(0deg);
        }
        #{13 + ($i * 20)}% {
            background-image: nth($images, ($i + 2));
            background-position: -388px -2px;
            transform: rotateY(180deg);
        }
    }
}

.twitterLink {
    position: fixed;
    bottom: 0.5em;
    right: 0.5em;
    & img {
        width: 2em;
        filter: grayscale(100%);
        transition: filter 0.25s;
        &:hover {
            filter: grayscale(0%);
        }
    }
}

@media only screen and (max-width: 600px) {
    .book {
        position: relative;
        perspective: 630px;
        perspective-origin: center 50px;
        transform: scale(1);
        filter: drop-shadow(0px 10px 5px rgba(0, 0, 0, 0.25));
    }
}